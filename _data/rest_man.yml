examples:

  ######
  # GET
  ######

  get:
    - title: Request for plain text
      request:
        http_method: GET
        request_target: /test
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: Mozilla/5.0"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/plain"
        http_body: Hello world!
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.get "http://example.com/test"

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Hello world! 
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :get,
              url: "http://example.com/test"
            )

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Hello world! 
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/test")
            resposne = resource.get

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Hello world! 
            ```
        - tab: cli
          body: |
            ```bash
            $ restman get http://example.com/test

            Hello world!
            ```

    - title: Request for a static HTML page
      request:
        http_method: GET
        request_target: /about
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: Mozilla/5.0"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/html"
        http_body: |
          <html>
          <head>
          <title>About Us</title></head>
          <body>
          ...
          </body>
          </html>
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.get "http://example.com/about", headers: {"User-Agent" => "Mozilla/5.0"}

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ...
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :get,
              url: "http://example.com/about",
              headers: {"User-Agent" => "Mozilla/5.0"}
            )

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ...
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/about")
            resposne = resource.get({"User-Agent" => "Mozilla/5.0"})

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ...
            ```
        - tab: cli
          body: |
            ```bash
            $ restman get http://example.com/about

            <html>
            <head>
            <title>About Us</title>
            </head>
            <body>
            ...
            </body>
            </html>
            ```

    - title: Request with custom headers
      request:
        http_method: GET
        request_target: /data
        http_version: HTTP/1.1
        http_headers:
          - "Accept: application/json"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - 'If-None-Match: e22d62c1'
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: application/json"
          - 'ETag: e22d62c1'
        http_body: |
          {
            "name": "John Hill",
            "age": 30
          }
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.get "http://example.com/data", headers: {accept: "application/json", "If-None-Match": "e22d62c1"}

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.headers[:etag]         #=> "e22d62c1"
            response.body                   #=> {"name": ...}
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :get,
              url: "http://example.com/data",
              headers: {accept: "application/json", "If-None-Match": "e22d62c1"}
            )

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.headers[:etag]         #=> "e22d62c1"
            response.body                   #=> {"name": ...}
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/data")
            resposne = resource.get({
              accept: "application/json",
              "If-None-Match": "e22d62c1"
            })

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.headers[:etag]         #=> "e22d62c1"
            response.body                   #=> {"name": ...}
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support customize headers currently.
            ```

  ######
  # POST
  ######

  post:
    - title: Submitting plain text data
      request:
        http_method: POST
        request_target: /resource
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: text/plain"
          - "Content-Length: 14"
        http_body: Hello, world!
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/plain"
        http_body: Text received.
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.post "http://example.com/resource", "Hello, world!", { content_type: "text/plain" }

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Text received.
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :post,
              url: "http://example.com/resource",
              payload: "Hello, world!",
              headers: { content_type: "text/plain" }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Text received.
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/resource")
            resposne = resource.post(
              "Hello, world!",
              {content_type: "text/plain"}
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Text received.
            ```
        - tab: cli
          body: |
            ```bash
            $ echo "Hello world!" | restman post http://example.com/resource

            Text received.
            ```

    - title: Submitting form data
      request:
        http_method: POST
        request_target: /resource
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: application/x-www-form-urlencoded"
          - "Content-Length: 27"
        http_body: first_name=john&last_name=hil
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/html"
        http_body: |
          <html>
          <body>
          Thank you, John Hill, for submitting the form!
          </body>
          </html>
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.post 'http://example.com/resource', { first_name: "John", last_name: "Hill" }

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ... 
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :post,
              url: 'http://example.com/resource',
              payload: { first_name: "John", last_name: "Hill" }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ... 
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/resource")
            response = resource.post({ first_name: "John", last_name: "Hill" })

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ... 
            ```
        - tab: cli
          body: |
            ```bash
            $ echo "first_name=john&last_name=hil" | restman post http://example.com/resource

            <html>
            <body>
            Thank you, John Hill, for submitting the form!
            </body>
            </html>
            ```

    - title: Posting JSON data with custom headers
      request:
        http_method: POST
        request_target: /api/resource
        http_version: HTTP/1.1
        http_headers:
          - "Accept: application/json"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: application/json"
          - "Authorization: Bearer token123"
          - "Content-Length: 32"
        http_body: {"username": "johnhill", "age": 20}
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: application/json"
        http_body: |
          {
            "status": "success",
            "message": "Data updated successfully"
          }
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.post(
              'http://example.com/api/resource',
              {
                username: "johnhill",
                age: 30,
              }.to_json,
              {
                authorization: "Bearer token123",
                accept: :json,
                content_type: :json
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :post,
              url: 'http://example.com/api/resource',
              payload: {
                username: "johnhill",
                age: 30,
              }.to_json,
              headers: {
                authorization: "Bearer token123",
                accept: :json,
                content_type: :json
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/api/resource")
            response = resource.post(
              {
                username: "johnhill",
                age: 30,
              }.to_json,
              {
                authorization: "Bearer token123",
                accept: :json,
                content_type: :json
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support JSON submit currently.
            ```

    - title: Posting a file directly
      request:
        http_method: POST
        request_target: /api/image
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: image/jpeg"
          - "Content-Length: 143685"
        http_body: [JPEG binary data goes here]
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/plain"
        http_body: Image uploaded successfully
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.post(
              'http://example.com/api/image',
              File.new("./files/profile.jpg", 'rb'),
              {content_type: :jpg}
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Image uploaded successfully
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :post,
              url: 'http://example.com/api/image',
              payload: File.new("./files/profile.jpg", 'rb'),
              headers: { content_type: :jpg }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Image uploaded successfully
            ```
        - tab: resource
          body: |
            ```bash
            resource = RestMan::Resource.new("http://example.com/api/image")
            response = resource.post(
              File.new("./files/profile.jpg", 'rb'),
              {content_type: :jpg}
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Image uploaded successfully
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support file upload with custom headers
            ```

    - title: Posting files with multipart
      request:
        http_method: POST
        request_target: /api/profile
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: multipart/form-data; boundary=RubyFormBoundary123"
          - "Content-Length: 8362"
        http_body: |
          ------RubyFormBoundary123
          Content-Disposition: form-data; name="username"

          johnhill
          ------RubyFormBoundary123
          Content-Disposition: form-data; name="profile1"; filename="profile.jpg"
          Content-Type: image/jpeg

          [BINARY DATA FOR JPEG IMAGE]
          ------RubyFormBoundary123
          Content-Disposition: form-data; name="profile2"; filename="profile2.jpg"
          Content-Type: image/jpeg

          [BINARY DATA FOR JPEG IMAGE]
          ------RubyFormBoundary123--
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: application/json"
        http_body: |
          {
            "status": "success",
            "message": "Profile updated successfully",
            "url": "/images/profile.jpg"
          }
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.post(
              'http://example.com/api/profile',
              {
                username: 'johnhill',
                profile1: File.new("./files/profile.jpg", 'rb'),
                profile2: File.new("./files/profile2.jpg", 'rb')
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: post,
              url: "http://example.com/api/profile",
              payload: {
                username: 'johnhill',
                profile1: File.new("./files/profile.jpg", 'rb'),
                profile2: File.new("./files/profile2.jpg", 'rb')
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: resource
          body: |
            ```bash
            resource = RestMan::Resource.new("http://example.com/api/profile")
            resposne = resource.post(
              {
                username: 'johnhill',
                profile1: File.new("./files/profile.jpg", 'rb'),
                profile2: File.new("./files/profile2.jpg", 'rb')
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support multipart request currently.
            ```

  ######
  # PUT
  ######

  put:
    - title: Submitting plain text data
      request:
        http_method: PUT
        request_target: /resource
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: text/plain"
          - "Content-Length: 14"
        http_body: Hello, world!
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/plain"
        http_body: Text received.
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.put "http://example.com/resource", "Hello, world!", { content_type: "text/plain" }

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Text received.
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :put,
              url: "http://example.com/resource",
              payload: "Hello, world!",
              headers: { content_type: "text/plain" }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Text received.
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/resource")
            resposne = resource.put(
              "Hello, world!",
              {content_type: "text/plain"}
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Text received.
            ```
        - tab: cli
          body: |
            ```bash
            $ echo "Hello world!" | restman put http://example.com/resource

            Text received.
            ```

    - title: Submitting form data
      request:
        http_method: PUT
        request_target: /resource
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: application/x-www-form-urlencoded"
          - "Content-Length: 27"
        http_body: first_name=john&last_name=hil
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/html"
        http_body: |
          <html>
          <body>
          Thank you, John Hill, for submitting the form!
          </body>
          </html>
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.put 'http://example.com/resource', { first_name: "John", last_name: "Hill" }

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ... 
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :put,
              url: 'http://example.com/resource',
              payload: { first_name: "John", last_name: "Hill" }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ... 
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/resource")
            response = resource.put({ first_name: "John", last_name: "Hill" })

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ... 
            ```
        - tab: cli
          body: |
            ```bash
            $ echo "first_name=john&last_name=hil" | restman put http://example.com/resource

            <html>
            <body>
            Thank you, John Hill, for submitting the form!
            </body>
            </html>
            ```

    - title: Posting JSON data with custom headers
      request:
        http_method: PUT
        request_target: /api/resource
        http_version: HTTP/1.1
        http_headers:
          - "Accept: application/json"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: application/json"
          - "Authorization: Bearer token123"
          - "Content-Length: 32"
        http_body: {"username": "johnhill", "age": 20}
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: application/json"
        http_body: |
          {
            "status": "success",
            "message": "Data updated successfully"
          }
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.put(
              'http://example.com/api/resource',
              {
                username: "johnhill",
                age: 30,
              }.to_json,
              {
                authorization: "Bearer token123",
                accept: :json,
                content_type: :json
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :put,
              url: 'http://example.com/api/resource',
              payload: {
                username: "johnhill",
                age: 30,
              }.to_json,
              headers: {
                authorization: "Bearer token123",
                accept: :json,
                content_type: :json
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/api/resource")
            response = resource.put(
              {
                username: "johnhill",
                age: 30,
              }.to_json,
              {
                authorization: "Bearer token123",
                accept: :json,
                content_type: :json
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support JSON submit currently.
            ```

    - title: Posting a file directly
      request:
        http_method: PUT
        request_target: /api/image
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: image/jpeg"
          - "Content-Length: 143685"
        http_body: [JPEG binary data goes here]
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/plain"
        http_body: Image uploaded successfully
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.put(
              'http://example.com/api/image',
              File.new("./files/profile.jpg", 'rb'),
              {content_type: :jpg}
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Image uploaded successfully
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :put,
              url: 'http://example.com/api/image',
              payload: File.new("./files/profile.jpg", 'rb'),
              headers: { content_type: :jpg }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Image uploaded successfully
            ```
        - tab: resource
          body: |
            ```bash
            resource = RestMan::Resource.new("http://example.com/api/image")
            response = resource.put(
              File.new("./files/profile.jpg", 'rb'),
              {content_type: :jpg}
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Image uploaded successfully
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support file upload with custom headers
            ```

    - title: Posting files with multipart
      request:
        http_method: PUT
        request_target: /api/profile
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: multipart/form-data; boundary=RubyFormBoundary123"
          - "Content-Length: 8362"
        http_body: |
          ------RubyFormBoundary123
          Content-Disposition: form-data; name="username"

          johnhill
          ------RubyFormBoundary123
          Content-Disposition: form-data; name="profile1"; filename="profile.jpg"
          Content-Type: image/jpeg

          [BINARY DATA FOR JPEG IMAGE]
          ------RubyFormBoundary123
          Content-Disposition: form-data; name="profile2"; filename="profile2.jpg"
          Content-Type: image/jpeg

          [BINARY DATA FOR JPEG IMAGE]
          ------RubyFormBoundary123--
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: application/json"
        http_body: |
          {
            "status": "success",
            "message": "Profile updated successfully",
            "url": "/images/profile.jpg"
          }
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.put(
              'http://example.com/api/profile',
              {
                username: 'johnhill',
                profile1: File.new("./files/profile.jpg", 'rb'),
                profile2: File.new("./files/profile2.jpg", 'rb')
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: put,
              url: "http://example.com/api/profile",
              payload: {
                username: 'johnhill',
                profile1: File.new("./files/profile.jpg", 'rb'),
                profile2: File.new("./files/profile2.jpg", 'rb')
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: resource
          body: |
            ```bash
            resource = RestMan::Resource.new("http://example.com/api/profile")
            resposne = resource.put(
              {
                username: 'johnhill',
                profile1: File.new("./files/profile.jpg", 'rb'),
                profile2: File.new("./files/profile2.jpg", 'rb')
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support multipart request currently.
            ```

  ######
  # PATCH
  ######

  patch:
    - title: Submitting plain text data
      request:
        http_method: PATCH
        request_target: /resource
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: text/plain"
          - "Content-Length: 14"
        http_body: Hello, world!
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/plain"
        http_body: Text received.
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.patch "http://example.com/resource", "Hello, world!", { content_type: "text/plain" }

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Text received.
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :patch,
              url: "http://example.com/resource",
              payload: "Hello, world!",
              headers: { content_type: "text/plain" }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Text received.
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/resource")
            resposne = resource.patch(
              "Hello, world!",
              {content_type: "text/plain"}
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Text received.
            ```
        - tab: cli
          body: |
            ```bash
            $ echo "Hello world!" | restman patch http://example.com/resource

            Text received.
            ```

    - title: Submitting form data
      request:
        http_method: PATCH
        request_target: /resource
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: application/x-www-form-urlencoded"
          - "Content-Length: 27"
        http_body: first_name=john&last_name=hil
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/html"
        http_body: |
          <html>
          <body>
          Thank you, John Hill, for submitting the form!
          </body>
          </html>
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.patch 'http://example.com/resource', { first_name: "John", last_name: "Hill" }

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ... 
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :patch,
              url: 'http://example.com/resource',
              payload: { first_name: "John", last_name: "Hill" }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ... 
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/resource")
            response = resource.patch({ first_name: "John", last_name: "Hill" })

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/html
            response.body                   #=> <html> ... 
            ```
        - tab: cli
          body: |
            ```bash
            $ echo "first_name=john&last_name=hil" | restman patch http://example.com/resource

            <html>
            <body>
            Thank you, John Hill, for submitting the form!
            </body>
            </html>
            ```

    - title: Posting JSON data with custom headers
      request:
        http_method: PATCH
        request_target: /api/resource
        http_version: HTTP/1.1
        http_headers:
          - "Accept: application/json"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: application/json"
          - "Authorization: Bearer token123"
          - "Content-Length: 32"
        http_body: {"username": "johnhill", "age": 20}
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: application/json"
        http_body: |
          {
            "status": "success",
            "message": "Data updated successfully"
          }
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.patch(
              'http://example.com/api/resource',
              {
                username: "johnhill",
                age: 30,
              }.to_json,
              {
                authorization: "Bearer token123",
                accept: :json,
                content_type: :json
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :patch,
              url: 'http://example.com/api/resource',
              payload: {
                username: "johnhill",
                age: 30,
              }.to_json,
              headers: {
                authorization: "Bearer token123",
                accept: :json,
                content_type: :json
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/api/resource")
            response = resource.patch(
              {
                username: "johnhill",
                age: 30,
              }.to_json,
              {
                authorization: "Bearer token123",
                accept: :json,
                content_type: :json
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support JSON submit currently.
            ```

    - title: Posting a file directly
      request:
        http_method: PATCH
        request_target: /api/image
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: image/jpeg"
          - "Content-Length: 143685"
        http_body: [JPEG binary data goes here]
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/plain"
        http_body: Image uploaded successfully
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.patch(
              'http://example.com/api/image',
              File.new("./files/profile.jpg", 'rb'),
              {content_type: :jpg}
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Image uploaded successfully
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :patch,
              url: 'http://example.com/api/image',
              payload: File.new("./files/profile.jpg", 'rb'),
              headers: { content_type: :jpg }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Image uploaded successfully
            ```
        - tab: resource
          body: |
            ```bash
            resource = RestMan::Resource.new("http://example.com/api/image")
            response = resource.patch(
              File.new("./files/profile.jpg", 'rb'),
              {content_type: :jpg}
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Image uploaded successfully
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support file upload with custom headers
            ```

    - title: Posting files with multipart
      request:
        http_method: PATCH
        request_target: /api/profile
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Content-Type: multipart/form-data; boundary=RubyFormBoundary123"
          - "Content-Length: 8362"
        http_body: |
          ------RubyFormBoundary123
          Content-Disposition: form-data; name="username"

          johnhill
          ------RubyFormBoundary123
          Content-Disposition: form-data; name="profile1"; filename="profile.jpg"
          Content-Type: image/jpeg

          [BINARY DATA FOR JPEG IMAGE]
          ------RubyFormBoundary123
          Content-Disposition: form-data; name="profile2"; filename="profile2.jpg"
          Content-Type: image/jpeg

          [BINARY DATA FOR JPEG IMAGE]
          ------RubyFormBoundary123--
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: application/json"
        http_body: |
          {
            "status": "success",
            "message": "Profile updated successfully",
            "url": "/images/profile.jpg"
          }
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.patch(
              'http://example.com/api/profile',
              {
                username: 'johnhill',
                profile1: File.new("./files/profile.jpg", 'rb'),
                profile2: File.new("./files/profile2.jpg", 'rb')
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: patch,
              url: "http://example.com/api/profile",
              payload: {
                username: 'johnhill',
                profile1: File.new("./files/profile.jpg", 'rb'),
                profile2: File.new("./files/profile2.jpg", 'rb')
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: resource
          body: |
            ```bash
            resource = RestMan::Resource.new("http://example.com/api/profile")
            resposne = resource.patch(
              {
                username: 'johnhill',
                profile1: File.new("./files/profile.jpg", 'rb'),
                profile2: File.new("./files/profile2.jpg", 'rb')
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"status": ...}
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support multipart request currently.
            ```

  ######
  # DELETE
  ######

  delete:
    - title: Delete resource
      request:
        http_method: DELETE
        request_target: /resource/1
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: application/json"
        http_body: |
          {
            "message": "Resource with ID 1 has been deleted."
          }
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.delete "http://example.com/resource/1"

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"message": ...}
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan.execute(method: :delete, url: "http://example.com/resource/1")

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"message": ...}
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/resource/1")
            resposne = resource.delete

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"message": ...}
            ```
        - tab: cli
          body: |
            ```bash
            $ restman delete http://example.com/resource/1

            {"message": ...}
            ```

    - title: Delete resource with custom headers
      request:
        http_method: DELETE
        request_target: /user/1
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Authorization: Bearer token123"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: application/json"
        http_body: |
          {
            "message": "User with ID 1 has been deleted."
          }
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.delete "http://example.com/user/1", { authorization: "Bearer token123" }

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"message": ...}
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan.execute(
              method: :delete,
              url: "http://example.com/user/1",
              headers: {
                authorization: "Bearer token123"
              }
            )

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"message": ...}
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/resource/1")
            resposne = resource.delete({authorization: "Bearer token123"})

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:content_type] #=> application/json
            response.body                   #=> {"message": ...}
            ```
        - tab: cli
          body: |
            ```bash
            RestMan CLI hasn't support custom headers
            ```

  ######
  # OPTIONS
  ######

  options:
    - title: OPTIONS request for a resource
      request:
        http_method: OPTIONS
        request_target: /resource/1
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "Host: example.com"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Allow: GET, POST, HEAD, OPTIONS"
        http_body:
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.options "http://example.com/resource/1"

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:allow] #=> "GET, POST, HEAD, OPTIONS"
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan.execute(method: :options, url: "http://example.com/resource/1")

            response.status                 #=> 200
            response.headers                #=> Hash
            response.headers[:allow] #=> "GET, POST, HEAD, OPTIONS"
            ```
        - tab: resource
          body: |
            ```ruby
            # RestMan::Resource hasn't support options request
            ```
        - tab: cli
          body: |
            ```bash
            RestMan CLI hasn't support options request.
            ```

  ######
  # HEAD
  ######

  head:
    - title: Check file metadata
      request:
        http_method: HEAD
        request_target: /version-2.0.1.zip
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Host: example.com"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Date: Fri, 25 Aug 2023 17:22:33 GMT"
          - "Last-Modified: Wed, 23 Aug 2023 11:41:12 GMT"
          - "Content-Type: application/zip"
          - "Content-Length: 10338267"
        http_body:
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.head "http://example.com/version-2.0.1.zip"

            response.status                   #=>200
            response.headers                  #=> Hash
            response.headers[:date]           #=> Fri, 25 Aug 2023 17:22:33 GMT
            response.headers[:last_modified]  #=> Wed, 23 Aug 2023 11:41:12 GMT
            response.headers[:content_type]   #=> application/zip
            response.headers[:content_length] #=> 10338267
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :get,
              url: "http://example.com/version-2.0.1.zip"
            )

            response.status                   #=>200
            response.headers                  #=> Hash
            response.headers[:date]           #=> Fri, 25 Aug 2023 17:22:33 GMT
            response.headers[:last_modified]  #=> Wed, 23 Aug 2023 11:41:12 GMT
            response.headers[:content_type]   #=> application/zip
            response.headers[:content_length] #=> 10338267
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/version-2.0.1.zip")
            resposne = resource.head

            response.status                   #=>200
            response.headers                  #=> Hash
            response.headers[:date]           #=> Fri, 25 Aug 2023 17:22:33 GMT
            response.headers[:last_modified]  #=> Wed, 23 Aug 2023 11:41:12 GMT
            response.headers[:content_type]   #=> application/zip
            response.headers[:content_length] #=> 10338267
            ```
        - tab: cli
          body: |
            ```bash
            RestMan CLI hasn't support head request.
            ```

    - title: Verifying Availability of a video streaming resource
      request:
        http_method: HEAD
        request_target: /video/1.mp4
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Host: example.com"
          - "X-Api-Key: api-key-abc"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Date: Fri, 25 Aug 2023 17:22:33 GMT"
          - "Last-Modified: Wed, 23 Aug 2023 11:41:12 GMT"
          - "Content-Type: video/mp4"
          - "Accept-Range: bytes"
          - "Content-Length: 10338267"
        http_body:
      codes: 
        - tab: simple
          body: |
            ```ruby
            response = RestMan.head "http://example.com/video/1.mp4", { "X-API-Key": "api-key-abc" }

            response.status                   #=>200
            response.headers                  #=> Hash
            response.headers[:date]           #=> Fri, 25 Aug 2023 17:22:33 GMT
            response.headers[:last_modified]  #=> Wed, 23 Aug 2023 11:41:12 GMT
            response.headers[:content_type]   #=> video/mp4
            response.headers[:accept_range]   #=> bytes
            response.headers[:content_length] #=> 10338267
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :get,
              url: "http://example.com/video/1.mp4",
              headers: {
                "X-API-Key": "api-key-abc"
              }
            )

            response.status                   #=>200
            response.headers                  #=> Hash
            response.headers[:date]           #=> Fri, 25 Aug 2023 17:22:33 GMT
            response.headers[:last_modified]  #=> Wed, 23 Aug 2023 11:41:12 GMT
            response.headers[:content_type]   #=> video/mp4
            response.headers[:accept_range]   #=> bytes
            response.headers[:content_length] #=> 10338267
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new("http://example.com/video/1.mp4")
            resposne = resource.head({
              "X-API-Key": "api-key-abc"
            })

            response.status                   #=>200
            response.headers                  #=> Hash
            response.headers[:date]           #=> Fri, 25 Aug 2023 17:22:33 GMT
            response.headers[:last_modified]  #=> Wed, 23 Aug 2023 11:41:12 GMT
            response.headers[:content_type]   #=> video/mp4
            response.headers[:accept_range]   #=> bytes
            response.headers[:content_length] #=> 10338267
            ```
        - tab: cli
          body: |
            ```bash
            RestMan CLI hasn't support head request.
            ```

ssl_tls:
  description: |
    Various options are supported for configuring rest-man's TLS settings. By
    default, rest-man will verify certificates using the system's CA store on
    all platforms. This is intended to be similar to how browsers behave. You
    can also customize it as you like.

    - Customize the certificate authorities by specify `:ssl_ca_file`, `:ssl_ca_path`, or `:ssl_cert_store`.
    - Set client certificate for mutual authentication by specify `:ssl_client_cert` and `:ssl_client_key`

    Self-signed certificates can be generated with the openssl command-line tool.
  examples:
    - title: Customize certificate authorities
      request:
        https: true
        http_method: HEAD
        request_target: /test
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Host: example.com"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/plain"
        http_body: Hello world!
      codes: 
        - tab: simple
          body: |
            ```
            RestMan simple mode hasn't support SSL/TLS customization.
            Please use advance or resource mode.
            ```
        - tab: advance
          body: |
            ```ruby
            # Customize ssl_ca_file
            response = RestMan::Request.execute(
              method: :get,
              url: "https://example.com/test",
              ssl_ca_file: "/path/to/ca_certs.pem"
              verify_ssl: OpenSSL::SSL::VERIFY_PEER
            )

            # Customize ssl_ca_path
            response = RestMan::Request.execute(
              method: :get,
              url: "https://example.com/test",
              ssl_ca_path: "/path/to/certs"
              verify_ssl: OpenSSL::SSL::VERIFY_PEER
            )

            # Customize ssl_cert_store
            store = OpenSSL::X509::Store.new
            store.set_default_paths
            cert = OpenSSL::X509::Certificate.new(File.read('path/to/certificate.pem'))
            store.add_cert(cert)
            response = RestMan::Request.execute(
              method: :get,
              url: "https://example.com/test",
              ssl_cert_store: store,
              verify_ssl: OpenSSL::SSL::VERIFY_PEER
            )

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Hello world! 
            ```
        - tab: resource
          body: |
            ```ruby
            # Customize ssl_ca_file
            resource = RestMan::Resource.new(
              "https://example.com/test",
              ssl_ca_file: "/path/to/ca_certs.pem"
              verify_ssl: OpenSSL::SSL::VERIFY_PEER
            )
            resposne = resource.get

            # Customize ssl_ca_path
            resource = RestMan::Resource.new(
              "https://example.com/test",
              ssl_ca_path: "/path/to/certs"
              verify_ssl: OpenSSL::SSL::VERIFY_PEER
            )
            resposne = resource.get

            # Customize ssl_cert_store
            store = OpenSSL::X509::Store.new
            store.set_default_paths
            cert = OpenSSL::X509::Certificate.new(File.read('path/to/certificate.pem'))
            store.add_cert(cert)
            resource = RestMan::Resource.new(
              "https://example.com/test",
              ssl_cert_store: store,
              verify_ssl: OpenSSL::SSL::VERIFY_PEER
            )
            resposne = resource.get

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Hello world! 
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support SSL/TLS customization.
            ```
    - title: Customize client certificates
      request:
        https: true
        http_method: HEAD
        request_target: /test
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Host: example.com"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/plain"
        http_body: Hello world!
      codes: 
        - tab: simple
          body: |
            ```
            RestMan simple mode hasn't support SSL/TLS customization.
            Please use advance or resource mode.
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :get,
              url: "https://example.com/test",
              ssl_client_cert: OpenSSL::X509::Certificate.new(File.read("client.crt")),
              ssl_client_key: OpenSSL::PKey::RSA.new(File.read("client.key"))
            )

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Hello world! 
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new(
              "https://example.com/test",
              ssl_client_cert: OpenSSL::X509::Certificate.new(File.read("client.crt")),
              ssl_client_key: OpenSSL::PKey::RSA.new(File.read("client.key"))
            )
            resposne = resource.get

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Hello world! 
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support SSL/TLS customization.
            ```

retry:
  examples:
    - title: Manually set max retries
      pre_desc: |
        The default `max_retries` is 1. You can change it to any number you like. 
      request:
        http_method: HEAD
        request_target: /test
        http_version: HTTP/1.1
        http_headers:
          - "Accept: */*"
          - "Accept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3"
          - "User-Agent: rest-man/1.1.0 (darwin21 arm64) ruby/3.1.2p20"
          - "Host: example.com"
      response:
        http_version: HTTP/1.1
        status_code: 200
        status_text: OK
        http_headers:
          - "Content-Type: text/plain"
        http_body: Hello world!
      codes: 
        - tab: simple
          body: |
            ```
            RestMan simple mode hasn't support retry customization.
            Please use advance or resource mode.
            ```
        - tab: advance
          body: |
            ```ruby
            response = RestMan::Request.execute(
              method: :get,
              url: "http://example.com/test",
              max_retries: 0
            )

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Hello world! 
            ```
        - tab: resource
          body: |
            ```ruby
            resource = RestMan::Resource.new(
              "http://example.com/test",
              max_retries: 0
            )
            resposne = resource.get

            response.status                 #=>200
            response.headers                #=> Hash
            response.headers[:content_type] #=> text/plain
            response.body                   #=> Hello world! 
            ```
        - tab: cli
          body: |
            ```
            RestMan CLI hasn't support SSL/TLS customization.
            ```